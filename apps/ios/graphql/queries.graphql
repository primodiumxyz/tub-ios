query GetWalletTokenBalance(
  $wallet: String!
  $token: String!
  $start: timestamptz = "now()"
) {
  balance: wallet_token_balance_ignore_interval(
    args: { wallet: $wallet, interval: "0", start: $start, token: $token }
  ) {
    value: balance
  }
}

query GetWalletTokenBalanceIgnoreInterval(
  $wallet: String!
  $start: timestamptz = "now()"
  $interval: interval!
  $token: String!
) {
  balance: wallet_token_balance_ignore_interval(
    args: { wallet: $wallet, interval: $interval, start: $start, token: $token }
  ) {
    value: balance
  }
}

query GetWalletBalance($wallet: String!, $start: timestamptz = "now()") {
  balance: wallet_balance_ignore_interval(
    args: { wallet: $wallet, interval: "0", start: $start }
  ) {
    value: balance
  }
}

query GetWalletBalanceIgnoreInterval(
  $wallet: String!
  $start: timestamptz = "now()"
  $interval: interval!
) {
  balance: wallet_balance_ignore_interval(
    args: { wallet: $wallet, interval: $interval, start: $start }
  ) {
    value: balance
  }
}

query GetWalletTransactions($wallet: String!) {
  token_transaction(
    order_by: { wallet_transaction_data: { created_at: desc } }
    where: { wallet_transaction_data: { wallet: { _eq: $wallet } } }
  ) {
    wallet_transaction
    amount
    id
    token
    token_price
    wallet_transaction_data {
      created_at
    }
  }
}

query GetTokensMetadata($tokens: [String!]!) {
  api_trade_history(
    where: { token_mint: { _in: $tokens } }
    order_by: [{ token_mint: asc }, { created_at: desc }]
    distinct_on: [token_mint]
  ) {
    token_mint
    token_metadata
  }
}

query GetTokenPricesSince($token: String!, $since: timestamptz = "now()") {
  api_trade_history(
    where: { token_mint: { _eq: $token }, created_at: { _gte: $since } }
    order_by: { created_at: asc }
  ) {
    token_price_usd
    created_at
  }
}

query GetTokenCandles(
  $token: String!
  $since: timestamptz = "now()"
  $candle_interval: interval = "1m"
) {
  token_trade_history_candles(
    args: { candle_interval: $candle_interval }
    where: { token_mint: { _eq: $token }, bucket: { _gte: $since } }
  ) {
    bucket
    open_price_usd
    close_price_usd
    high_price_usd
    low_price_usd
  }
}
