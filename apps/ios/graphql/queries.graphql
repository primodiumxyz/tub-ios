query GetAllAccounts {
  account {
    id
    username
    created_at
  }
}

query GetAccountData($accountId: uuid!) {
  account(where: { id: { _eq: $accountId } }) {
    username
    id
    created_at
  }
}

query GetAllTokens {
  token(where: { mint: { _is_null: true } }) {
    id
    name
    symbol
    updated_at
    supply
    uri
  }
}

query GetTokenData($tokenId: uuid!) {
  token(where: { id: { _eq: $tokenId } }) {
    id
    name
    symbol
    mint
    decimals
    updated_at
    supply
    uri
  }
}

query GetTokensByMints($mints: [String!]!) {
  token(where: { mint: { _in: $mints } }) {
    id
    mint
  }
}

query GetAccountTokenBalance(
  $account: uuid!
  $token: uuid!
  $start: timestamptz = "now()"
) {
  balance: account_token_balance_ignore_interval(
    args: { account: $account, interval: "0", start: $start, token: $token }
  ) {
    value: balance
  }
}

query GetAccountTokenBalanceIgnoreInterval(
  $account: uuid!
  $start: timestamptz = "now()"
  $interval: interval!
  $token: uuid!
) {
  balance: account_token_balance_ignore_interval(
    args: {
      account: $account
      interval: $interval
      start: $start
      token: $token
    }
  ) {
    value: balance
  }
}

query GetAccountBalance($account: uuid!, $start: timestamptz = "now()") {
  balance: account_balance_ignore_interval(
    args: { account: $account, interval: "0", start: $start }
  ) {
    value: balance
  }
}

query GetAccountBalanceIgnoreInterval(
  $account: uuid!
  $start: timestamptz = "now()"
  $interval: interval!
) {
  balance: account_balance_ignore_interval(
    args: { account: $account, interval: $interval, start: $start }
  ) {
    value: balance
  }
}

query GetTokenPriceHistoryInterval(
  $token: uuid
  $start: timestamptz = "now()"
  $interval: interval!
) {
  token_price_history_offset(
    args: { offset: $interval }
    where: { created_at_offset: { _gte: $start }, token: { _eq: $token } }
    order_by: { created_at: desc }
  ) {
    created_at
    price
  }
}

query GetTokenPriceHistoryIgnoreInterval(
  $token: uuid
  $start: timestamptz = "now()"
  $interval: interval!
) {
  token_price_history_offset(
    args: { offset: $interval }
    where: { created_at_offset: { _lte: $start }, token: { _eq: $token } }
    order_by: { created_at: desc }
  ) {
    created_at
    price
  }
}

query GetLatestTokenPrice($tokenId: uuid!) {
  token_price_history(
    where: { token: { _eq: $tokenId } }
    order_by: { created_at: desc }
    limit: 1
  ) {
    created_at
    id
    price
    token
  }
}

query GetAccountTransactions($accountId: uuid!) {
  token_transaction(
    order_by: { account_transaction_data: { created_at: desc } }
    where: {
      account_transaction_data: { account_data: { id: { _eq: $accountId } } }
    }
  ) {
    account_transaction
    amount
    id
    token
    token_data {
      id
      name
      supply
      symbol
      uri
    }
    account_transaction_data {
      created_at
    }
    token_price {
      price
      created_at
    }
  }
}

query GetTokenPriceHistorySince($tokenId: uuid!, $since: timestamptz!) {
  token_price_history(
    where: { token: { _eq: $tokenId }, created_at: { _gte: $since } }
    order_by: { created_at: asc }
  ) {
    created_at
    id
    price
    token
  }
}

query GetFilteredTokens(
  $since: timestamptz!
  $minTrades: bigint!
  $minIncreasePct: float8!
) {
  get_formatted_tokens_since(
    args: { since: $since }
    where: {
      trades: { _gte: $minTrades }
      increase_pct: { _gte: $minIncreasePct }
    }
  ) {
    token_id
    mint
    decimals
    name
    symbol
    platform
    latest_price
    increase_pct
    trades
    created_at
  }
}
